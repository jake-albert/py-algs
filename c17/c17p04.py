import sys
sys.path.append('..')
from data_structs import DequeQueue
from time import time    
from c17p02 import f1 as my_shuffle
import matplotlib.pyplot as plt

# c17p04

# Missing Number: An array A contains all the integers from 0 to N, except for
# one number which is missing. In this problem, we cannot access an entire
# integer in A with a single operation. The elements of A are represented in
# binary, and the only operation we can use to access them is "fetch the jth 
# bit of A[i]," which takes constant time. Write code to find the missing 
# integer. Can you do it in O(N) time? 

##############################################################################

# First, I define a function that allows us to "fetch the jth bit of A[i]".

def get_jth_bit(x,j):
    """Returns the jth bit of some integer x."""
    return 1 & (x >> j)

# If the input list is already sorted in increasing order, then we can easily 
# identify the missing number in O(N) time by checking only the 0th bit of 
# each integer in order. The "gap" where the skipped integer should be will 
# have a sequence of two 0 or 1 0th bits in a row, and we return the index of 
# the number with the second of these bits. For example, if n is 7 and the 
# missing number is 4:
 
# i | A[i] | bits 
# --|------|------
# 0 |   0  |  000  
# 1 |   1  |  001
# 2 |   2  |  010
# 3 |   3  |  011
# 4 |   5  |  101  <==== !!
# 5 |   6  |  110
# 6 |   7  |  111 
    
# But when we cannot assume that the input is sorted, O(N) storage enables us 
# to still find the missing number in O(N) time. Say that n is 15 and the 
# missing number is 6, in a shuffled list:

#  i | A[i] | bits
# ----------------
#  0 |   7  | 0111
#  1 |  11  | 1011
#  2 |   8  | 1000
#  3 |   5  | 0101
#  4 |   9  | 1001
#  5 |  10  | 1010
#  6 |   2  | 0010
#  7 |   4  | 0100
#  8 |   1  | 0001
#  9 |  12  | 1100
# 10 |  13  | 1101
# 11 |  14  | 1110
# 12 |   3  | 0011
# 13 |  15  | 1111
# 14 |   0  | 0000

# Consider the 0th bit. We can expect that if no numbers 0-15 inclusive were
# missing, we would have 16//2 = 8 0's at the 0th position, and 16//2 = 8 1's
# at the 0th position. But if we count 0's and 1's at the 0th position, we see
# only 7 0's and 8 1's. This indicates that the missing number must have a 
# zero bit at the 0th position.

# What next? We could reason by similar logic how many 0's and 1's we expect 
# in the 1st position, and then 2nd, and so on until we have "constructed" the
# correct missing value, but this would require O(NlogN) time, no better than 
# if we were to first sort the values and solve as first described.

# The key is to ELIMINATE half of the values at each bit. When we find that
# the missing number above has a 0 bit at the 0th position, we do not need to 
# look at numbers with a 1 bit there. Doing so means that total runtime is in
# O(N + N/2 + N/4 ...) or O(N) time. We also require O(N) storage.

# I wrote the below function iteratively, which makes the code a little more 
# cumbersome than I think it would need to be if I wrote it recursively. 

def f1(lst):
    """Returns the missing number in a list.
    
    Args:
        lst: A list of all ints 0 to N except for one missing number. 
    
    Returns:
        An int.
    """
    
    # I assume that the correct interpretation for an empty list as
    # input is that the list contains the ints 0 to 0, with 0 missing.
    
    if len(lst) == 0:
        return 0
    
    n = len(lst) 
    q_0 = DequeQueue(range(len(lst))) 
    q_1 = DequeQueue()            
    cur_queue = q_0
    output = 0                                            
    
    # we begin by loading one of the queues with all indices to begin exploring
    
    #for i in range(len(lst)):
    #    q_0.add(i)
        
    # and mark this queue as the "current" queue we are exploring    
    cur_queue = q_0                
    
    # we also prepare to explore bit-by-bit the values that we have not eliminated
    comp = 1                                                 # the 2's power component
    j    = 0                                                 # the bit position
    
    # we need check bits only for as many as there are in the max value
    while comp <= n:
    
        cur_load = len(cur_queue)           # number of indices to explore
        exp_0   = (n-output)//(2*comp) + 1      # number of 0 bits to expect
        cnt_0   = 0                              # number of 0 bits seen 
        
        for _ in range(cur_load):
            
            index = cur_queue.remove()
            
            # add to our count and appropriate queue for the bit we find
            if get_jth_bit(lst[index],j):
                q_1.add(index)
            else:
                q_0.add(index)
                cnt_0 += 1
        
        # after looking, determine which bit was missing
        
        # if all expected 0 bits are accounted for, then we are missing a 1 bit
        # first, we update output, and then we must look in the queue where we 
        # put all of the values that had a 1 bit to see which of those is missing
        if cnt_0 == exp_0:
            output |= (1<<j)
            cur_queue = q_1
            drain(q_0)
        else:
            cur_queue = q_0
            drain(q_1)
            
        # prepare to move to the next bit
        comp <<= 1
        j += 1
    
    return output

# remove all values from a queue
def drain(queue):

    while not queue.is_empty():
        queue.remove()
        
# return the expected number of values that have a 0 bit that represents 
# the component (1,2,4,8,16,etc) from 0 to n, assuming no values are missing
# THIS FUNCTION, WHILE CORRECT, IS NOW DEFUNCT, AS WE DID NOT NEED IT FOR THE PROBLEM
def expected_zeros(n,comp):

    # we expect from calling f1 values only of comp that are <= n, but 
    # the correct output otherwise would be n, since they are all zero bits
    if comp > n:
        return n

    # we use the concept of "cycles" understanding that for values before 
    # a cutoff, the 0's and 1's occur in patterns for increasing values 
    # 0 to n. For exmaple, for the component 2, the numbers 0,1,2,3,4,5,6
    # have bits of 0,0,1,1,0,0,1,1....and we define a "cycle" to mean the 
    # full round of 0's and 1's which have an even split.

    total_values = n+1        # total number of values from 0 to n
    full_cycle_len = 2*comp   # number of values in a full cycle 
    
    # the number of zeros to expect involves zeros that are part of a complete cycle
    full_cycle_zs = (total_values // full_cycle_len) * (full_cycle_len//2)
    
    # as well as zeros that are part of the leftover cycle
    incomplete_cycle_size = total_values % full_cycle_len
    incomplete_cycle_zs = min(incomplete_cycle_size,comp)
    
    return full_cycle_zs + incomplete_cycle_zs
    

def test(n,trials):

    for trial in range(trials):
        lst = list(range(n))
        my_shuffle(lst)
        ans = lst.pop()
    
        if ans != f1(lst):
            print(ans,lst)


            
def time_test(trials):

    sizes = []
    times = []
    
    for n in range(100,100001,100):
        
        t_all = 0
        
        for _ in range(trials):
        
            lst = list(range(n))
            c17p2.f1(lst)
            ans = lst.pop()
        
            start = time()
            if ans != f1(lst):
                print(ans,lst)
            finish = time()
        
            t_all += (finish-start)
        
        sizes.append(n)
        times.append(t_all)
    
    plt.plot(sizes,times)
    plt.savefig("c17p04.png")
    plt.close()
    
x = [100, 200, 300, 400, 500, 600, 700, 800, 900, 1000, 1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900, 2000, 2100, 2200, 2300, 2400, 2500, 2600, 2700, 2800, 2900, 3000, 3100, 3200, 3300, 3400, 3500, 3600, 3700, 3800, 3900, 4000, 4100, 4200, 4300, 4400, 4500, 4600, 4700, 4800, 4900, 5000, 5100, 5200, 5300, 5400, 5500, 5600, 5700, 5800, 5900, 6000, 6100, 6200, 6300, 6400, 6500, 6600, 6700, 6800, 6900, 7000, 7100, 7200, 7300, 7400, 7500, 7600, 7700, 7800, 7900, 8000, 8100, 8200, 8300, 8400, 8500, 8600, 8700, 8800, 8900, 9000, 9100, 9200, 9300, 9400, 9500, 9600, 9700, 9800, 9900, 10000, 10100, 10200, 10300, 10400, 10500, 10600, 10700, 10800, 10900, 11000, 11100, 11200, 11300, 11400, 11500, 11600, 11700, 11800, 11900, 12000, 12100, 12200, 12300, 12400, 12500, 12600, 12700, 12800, 12900, 13000, 13100, 13200, 13300, 13400, 13500, 13600, 13700, 13800, 13900, 14000, 14100, 14200, 14300, 14400, 14500, 14600, 14700, 14800, 14900, 15000, 15100, 15200, 15300, 15400, 15500, 15600, 15700, 15800, 15900, 16000, 16100, 16200, 16300, 16400, 16500, 16600, 16700, 16800, 16900, 17000, 17100, 17200, 17300, 17400, 17500, 17600, 17700, 17800, 17900, 18000, 18100, 18200, 18300, 18400, 18500, 18600, 18700, 18800, 18900, 19000, 19100, 19200, 19300, 19400, 19500, 19600, 19700, 19800, 19900, 20000, 20100, 20200, 20300, 20400, 20500, 20600, 20700, 20800, 20900, 21000, 21100, 21200, 21300, 21400, 21500, 21600, 21700, 21800, 21900, 22000, 22100, 22200, 22300, 22400, 22500, 22600, 22700, 22800, 22900, 23000, 23100, 23200, 23300, 23400, 23500, 23600, 23700, 23800, 23900, 24000, 24100, 24200, 24300, 24400, 24500, 24600, 24700, 24800, 24900, 25000, 25100, 25200, 25300, 25400, 25500, 25600, 25700, 25800, 25900, 26000, 26100, 26200, 26300, 26400, 26500, 26600, 26700, 26800, 26900, 27000, 27100, 27200, 27300, 27400, 27500, 27600, 27700, 27800, 27900, 28000, 28100, 28200, 28300, 28400, 28500, 28600, 28700, 28800, 28900, 29000, 29100, 29200, 29300, 29400, 29500, 29600, 29700, 29800, 29900, 30000, 30100, 30200, 30300, 30400, 30500, 30600, 30700, 30800, 30900, 31000, 31100, 31200, 31300, 31400, 31500, 31600, 31700, 31800, 31900, 32000, 32100, 32200, 32300, 32400, 32500, 32600, 32700, 32800, 32900, 33000, 33100, 33200, 33300, 33400, 33500, 33600, 33700, 33800, 33900, 34000, 34100, 34200, 34300, 34400, 34500, 34600, 34700, 34800, 34900, 35000, 35100, 35200, 35300, 35400, 35500, 35600, 35700, 35800, 35900, 36000, 36100, 36200, 36300, 36400, 36500, 36600, 36700, 36800, 36900, 37000, 37100, 37200, 37300, 37400, 37500, 37600, 37700, 37800, 37900, 38000, 38100, 38200, 38300, 38400, 38500, 38600, 38700, 38800, 38900, 39000, 39100, 39200, 39300, 39400, 39500, 39600, 39700, 39800, 39900, 40000, 40100, 40200, 40300, 40400, 40500, 40600, 40700, 40800, 40900, 41000, 41100, 41200, 41300, 41400, 41500, 41600, 41700, 41800, 41900, 42000, 42100, 42200, 42300, 42400, 42500, 42600, 42700, 42800, 42900, 43000, 43100, 43200, 43300, 43400, 43500, 43600, 43700, 43800, 43900, 44000, 44100, 44200, 44300, 44400, 44500, 44600, 44700, 44800, 44900, 45000, 45100, 45200, 45300, 45400, 45500, 45600, 45700, 45800, 45900, 46000, 46100, 46200, 46300, 46400, 46500, 46600, 46700, 46800, 46900, 47000, 47100, 47200, 47300, 47400, 47500, 47600, 47700, 47800, 47900, 48000, 48100, 48200, 48300, 48400, 48500, 48600, 48700, 48800, 48900, 49000, 49100, 49200, 49300, 49400, 49500, 49600, 49700, 49800, 49900, 50000, 50100, 50200, 50300, 50400, 50500, 50600, 50700, 50800, 50900, 51000, 51100, 51200, 51300, 51400, 51500, 51600, 51700, 51800, 51900, 52000, 52100, 52200, 52300, 52400, 52500, 52600, 52700, 52800, 52900, 53000, 53100, 53200, 53300, 53400, 53500, 53600, 53700, 53800, 53900, 54000, 54100, 54200, 54300, 54400, 54500, 54600, 54700, 54800, 54900, 55000, 55100, 55200, 55300, 55400, 55500, 55600, 55700, 55800, 55900, 56000, 56100, 56200, 56300, 56400, 56500, 56600, 56700, 56800, 56900, 57000, 57100, 57200, 57300, 57400, 57500, 57600, 57700, 57800, 57900, 58000, 58100, 58200, 58300, 58400, 58500, 58600, 58700, 58800, 58900, 59000, 59100, 59200, 59300, 59400, 59500, 59600, 59700, 59800, 59900, 60000, 60100, 60200, 60300, 60400, 60500, 60600, 60700, 60800, 60900, 61000, 61100, 61200, 61300, 61400, 61500, 61600, 61700, 61800, 61900, 62000, 62100, 62200, 62300, 62400, 62500, 62600, 62700, 62800, 62900, 63000, 63100, 63200, 63300, 63400, 63500, 63600, 63700, 63800, 63900, 64000, 64100, 64200, 64300, 64400, 64500, 64600, 64700, 64800, 64900, 65000, 65100, 65200, 65300, 65400, 65500, 65600, 65700, 65800, 65900, 66000, 66100, 66200, 66300, 66400, 66500, 66600, 66700, 66800, 66900, 67000, 67100, 67200, 67300, 67400, 67500, 67600, 67700, 67800, 67900, 68000, 68100, 68200, 68300, 68400, 68500, 68600, 68700, 68800, 68900, 69000, 69100, 69200, 69300, 69400, 69500, 69600, 69700, 69800, 69900, 70000, 70100, 70200, 70300, 70400, 70500, 70600, 70700, 70800, 70900, 71000, 71100, 71200, 71300, 71400, 71500, 71600, 71700, 71800, 71900, 72000, 72100, 72200, 72300, 72400, 72500, 72600, 72700, 72800, 72900, 73000, 73100, 73200, 73300, 73400, 73500, 73600, 73700, 73800, 73900, 74000, 74100, 74200, 74300, 74400, 74500, 74600, 74700, 74800, 74900, 75000, 75100, 75200, 75300, 75400, 75500, 75600, 75700, 75800, 75900, 76000, 76100, 76200, 76300, 76400, 76500, 76600, 76700, 76800, 76900, 77000, 77100, 77200, 77300, 77400, 77500, 77600, 77700, 77800, 77900, 78000, 78100, 78200, 78300, 78400, 78500, 78600, 78700, 78800, 78900, 79000, 79100, 79200, 79300, 79400, 79500, 79600, 79700, 79800, 79900, 80000, 80100, 80200, 80300, 80400, 80500, 80600, 80700, 80800, 80900, 81000, 81100, 81200, 81300, 81400, 81500, 81600, 81700, 81800, 81900, 82000, 82100, 82200, 82300, 82400, 82500, 82600, 82700, 82800, 82900, 83000, 83100, 83200, 83300, 83400, 83500, 83600, 83700, 83800, 83900, 84000, 84100, 84200, 84300, 84400, 84500, 84600, 84700, 84800, 84900, 85000, 85100, 85200, 85300, 85400, 85500, 85600, 85700, 85800, 85900, 86000, 86100, 86200, 86300, 86400, 86500, 86600, 86700, 86800, 86900, 87000, 87100, 87200, 87300, 87400, 87500, 87600, 87700, 87800, 87900, 88000, 88100, 88200, 88300, 88400, 88500, 88600, 88700, 88800, 88900, 89000, 89100, 89200, 89300, 89400, 89500, 89600, 89700, 89800, 89900, 90000, 90100, 90200, 90300, 90400, 90500, 90600, 90700, 90800, 90900, 91000, 91100, 91200, 91300, 91400, 91500, 91600, 91700, 91800, 91900, 92000, 92100, 92200, 92300, 92400, 92500, 92600, 92700, 92800, 92900, 93000, 93100, 93200, 93300, 93400, 93500, 93600, 93700, 93800, 93900, 94000, 94100, 94200, 94300, 94400, 94500, 94600, 94700, 94800, 94900, 95000, 95100, 95200, 95300, 95400, 95500, 95600, 95700, 95800, 95900, 96000, 96100, 96200, 96300, 96400, 96500, 96600, 96700, 96800, 96900, 97000, 97100, 97200, 97300, 97400, 97500, 97600, 97700, 97800, 97900, 98000, 98100, 98200, 98300, 98400, 98500, 98600, 98700, 98800, 98900, 99000, 99100, 99200, 99300, 99400, 99500, 99600, 99700, 99800, 99900, 100000] 
y = [0.0010001659393310547, 0.0, 0.0020017623901367188, 0.0009989738464355469, 0.0019974708557128906, 0.003000974655151367, 0.002997875213623047, 0.003994464874267578, 0.003997325897216797, 0.003997802734375, 0.004995584487915039, 0.0039975643157958984, 0.004996776580810547, 0.006995677947998047, 0.005995750427246094, 0.0059964656829833984, 0.006995439529418945, 0.007999420166015625, 0.008989334106445312, 0.008996009826660156, 0.007995128631591797, 0.008996009826660156, 0.009994983673095703, 0.01099395751953125, 0.011998653411865234, 0.011992454528808594, 0.012993812561035156, 0.01299142837524414, 0.012991666793823242, 0.013990640640258789, 0.012992382049560547, 0.015992403030395508, 0.014991283416748047, 0.01499319076538086, 0.01699042320251465, 0.015990257263183594, 0.015990734100341797, 0.01698589324951172, 0.015990257263183594, 0.015990018844604492, 0.016988754272460938, 0.017989397048950195, 0.01898813247680664, 0.022986888885498047, 0.018993377685546875, 0.019986867904663086, 0.020982980728149414, 0.01998758316040039, 0.01998758316040039, 0.021986007690429688, 0.021985530853271484, 0.021987199783325195, 0.023989439010620117, 0.02298712730407715, 0.02398514747619629, 0.022985458374023438, 0.025989294052124023, 0.02498149871826172, 0.025983572006225586, 0.02598404884338379, 0.03596973419189453, 0.02798295021057129, 0.02798771858215332, 0.028986454010009766, 0.029985427856445312, 0.028982877731323242, 0.029981374740600586, 0.032979726791381836, 0.029981613159179688, 0.02998661994934082, 0.03197908401489258, 0.03297924995422363, 0.03197884559631348, 0.03297996520996094, 0.032979488372802734, 0.03397989273071289, 0.03498411178588867, 0.03397798538208008, 0.03797721862792969, 0.03597879409790039, 0.03597712516784668, 0.035976409912109375, 0.03497886657714844, 0.03597831726074219, 0.03698229789733887, 0.03697514533996582, 0.04097437858581543, 0.03897595405578613, 0.03997039794921875, 0.03997492790222168, 0.03997516632080078, 0.03997492790222168, 0.040975093841552734, 0.04197382926940918, 0.04197406768798828, 0.04297375679016113, 0.040978431701660156, 0.043973684310913086, 0.04197430610656738, 0.04497241973876953, 0.0449681282043457, 0.04297471046447754, 0.04597353935241699, 0.04597067832946777, 0.04697060585021973, 0.0489654541015625, 0.046972036361694336, 0.04796600341796875, 0.04896974563598633, 0.04697060585021973, 0.04797053337097168, 0.07095479965209961, 0.049973487854003906, 0.04996967315673828, 0.050971031188964844, 0.05096888542175293, 0.049962520599365234, 0.05196785926818848, 0.053965091705322266, 0.053968191146850586, 0.05197429656982422, 0.051972150802612305, 0.054962158203125, 0.055962562561035156, 0.053963661193847656, 0.05396580696105957, 0.055960655212402344, 0.05796504020690918, 0.05796098709106445, 0.0569605827331543, 0.058963775634765625, 0.05796337127685547, 0.05796051025390625, 0.05996274948120117, 0.05896282196044922, 0.06196188926696777, 0.05996251106262207, 0.06096172332763672, 0.06296467781066895, 0.06096220016479492, 0.06296205520629883, 0.06295943260192871, 0.0639641284942627, 0.06296086311340332, 0.06495952606201172, 0.06995654106140137, 0.06595921516418457, 0.06496119499206543, 0.06795859336853027, 0.06595897674560547, 0.06795835494995117, 0.06595945358276367, 0.06795334815979004, 0.09094452857971191, 0.10393476486206055, 0.08894586563110352, 0.08494734764099121, 0.08694577217102051, 0.08794713020324707, 0.10393595695495605, 0.08194851875305176, 0.07295513153076172, 0.07195854187011719, 0.07395458221435547, 0.07295823097229004, 0.07295370101928711, 0.0729520320892334, 0.07395458221435547, 0.07695293426513672, 0.07395482063293457, 0.07495546340942383, 0.07794594764709473, 0.07395482063293457, 0.07995033264160156, 0.08295011520385742, 0.07995080947875977, 0.08794689178466797, 0.07795286178588867, 0.08094954490661621, 0.07895588874816895, 0.07895517349243164, 0.08895015716552734, 0.08095073699951172, 0.08095049858093262, 0.08095049858093262, 0.08194947242736816, 0.0839536190032959, 0.08394837379455566, 0.08894610404968262, 0.08495259284973145, 0.0839536190032959, 0.08494806289672852, 0.08594727516174316, 0.08894133567810059, 0.0849463939666748, 0.08694648742675781, 0.08594036102294922, 0.08494877815246582, 0.08794546127319336, 0.08695316314697266, 0.08694791793823242, 0.08894705772399902, 0.09194684028625488, 0.09095168113708496, 0.09294915199279785, 0.09093976020812988, 0.09194231033325195, 0.0929417610168457, 0.09194326400756836, 0.0929422378540039, 0.0949399471282959, 0.09394264221191406, 0.0929422378540039, 0.1029365062713623, 0.0979461669921875, 0.0969398021697998, 0.09893488883972168, 0.09594106674194336, 0.09893965721130371, 0.09694099426269531, 0.09893918037414551, 0.09793448448181152, 0.09893202781677246, 0.10093808174133301, 0.10393619537353516, 0.10093879699707031, 0.10193705558776855, 0.10194230079650879, 0.11293220520019531, 0.10596537590026855, 0.1049351692199707, 0.10193634033203125, 0.10393381118774414, 0.10692930221557617, 0.1089327335357666, 0.1149296760559082, 0.10893440246582031, 0.10592842102050781, 0.1089332103729248, 0.10793375968933105, 0.11793160438537598, 0.1149284839630127, 0.10993170738220215, 0.1109316349029541, 0.17189455032348633, 0.1129298210144043, 0.10793447494506836, 0.11592459678649902, 0.118927001953125, 0.118927001953125, 0.12392306327819824, 0.11593246459960938, 0.11593461036682129, 0.11592841148376465, 0.11393976211547852, 0.1169285774230957, 0.1149296760559082, 0.11692690849304199, 0.1229243278503418, 0.12292146682739258, 0.12192606925964355, 0.1149294376373291, 0.11993050575256348, 0.1169276237487793, 0.11792373657226562, 0.1169285774230957, 0.14590954780578613, 0.12392902374267578, 0.12492251396179199, 0.12193059921264648, 0.12292861938476562, 0.12292003631591797, 0.11992597579956055, 0.12192487716674805, 0.12292265892028809, 0.12492752075195312, 0.12192034721374512, 0.1209251880645752, 0.1259164810180664, 0.1249229907989502, 0.12491893768310547, 0.12592673301696777, 0.12591958045959473, 0.12691712379455566, 0.1309194564819336, 0.12792563438415527, 0.12991690635681152, 0.13291406631469727, 0.13192033767700195, 0.12791991233825684, 0.13092470169067383, 0.12992501258850098, 0.13192367553710938, 0.12992143630981445, 0.132918119430542, 0.13492155075073242, 0.1309189796447754, 0.13291144371032715, 0.13291645050048828, 0.1329185962677002, 0.1379098892211914, 0.13791584968566895, 0.13491177558898926, 0.13591623306274414, 0.13391661643981934, 0.14191246032714844, 0.13592123985290527, 0.13692045211791992, 0.13691973686218262, 0.1389148235321045, 0.13591551780700684, 0.1389141082763672, 0.13791584968566895, 0.1449110507965088, 0.14090871810913086, 0.14191102981567383, 0.13991880416870117, 0.14390778541564941, 0.1449124813079834, 0.14390993118286133, 0.14391279220581055, 0.14490604400634766, 0.14591383934020996, 0.14490938186645508, 0.1429119110107422, 0.14591050148010254, 0.1469101905822754, 0.14690947532653809, 0.14790821075439453, 0.15091156959533691, 0.1569046974182129, 0.15690279006958008, 0.15490937232971191, 0.14991354942321777, 0.16390013694763184, 0.17290306091308594, 0.16789603233337402, 0.16289782524108887, 0.15590763092041016, 0.15590310096740723, 0.15590739250183105, 0.22685837745666504, 0.18288779258728027, 0.15390610694885254, 0.15490412712097168, 0.15190696716308594, 0.1519010066986084, 0.15490078926086426, 0.15689826011657715, 0.15691018104553223, 0.15690231323242188, 0.1589040756225586, 0.15489935874938965, 0.15790295600891113, 0.15790319442749023, 0.1549053192138672, 0.16089439392089844, 0.15990567207336426, 0.15890192985534668, 0.16389918327331543, 0.16289997100830078, 0.1629040241241455, 0.16489744186401367, 0.16389751434326172, 0.16590189933776855, 0.16489863395690918, 0.16289472579956055, 0.16389846801757812, 0.16590332984924316, 0.1658928394317627, 0.164902925491333, 0.16789603233337402, 0.16889190673828125, 0.1668992042541504, 0.16789627075195312, 0.1698904037475586, 0.16889500617980957, 0.16889691352844238, 0.17189383506774902, 0.1708991527557373, 0.16989660263061523, 0.17189502716064453, 0.16889667510986328, 0.17289400100708008, 0.17289423942565918, 0.174896240234375, 0.17489242553710938, 0.1758887767791748, 0.17589163780212402, 0.17788386344909668, 0.1788949966430664, 0.17289257049560547, 0.17489409446716309, 0.17589139938354492, 0.17689180374145508, 0.17689085006713867, 0.1778867244720459, 0.1818835735321045, 0.17988276481628418, 0.1758899688720703, 0.18188810348510742, 0.17989134788513184, 0.18188810348510742, 0.1828906536102295, 0.18088912963867188, 0.1828916072845459, 0.18488192558288574, 0.18088698387145996, 0.18388700485229492, 0.18888378143310547, 0.18388724327087402, 0.1858816146850586, 0.19087886810302734, 0.18488645553588867, 0.18488669395446777, 0.18688535690307617, 0.20287537574768066, 0.21686506271362305, 0.19488000869750977, 0.21886539459228516, 0.1878800392150879, 0.19087958335876465, 0.19787859916687012, 0.1878798007965088, 0.18988275527954102, 0.19987750053405762, 0.19987249374389648, 0.199876070022583, 0.22086429595947266, 0.2098703384399414, 0.1938788890838623, 0.18888330459594727, 0.19187450408935547, 0.19887614250183105, 0.19687819480895996, 0.19587945938110352, 0.19687819480895996, 0.1978740692138672, 0.19687962532043457, 0.1978743076324463, 0.20087838172912598, 0.19887542724609375, 0.19787812232971191, 0.19887733459472656, 0.19887304306030273, 0.19788265228271484, 0.20188117027282715, 0.2018749713897705, 0.2058732509613037, 0.20387697219848633, 0.20387482643127441, 0.20686864852905273, 0.2008810043334961, 0.20087289810180664, 0.2058732509613037, 0.20687389373779297, 0.23285722732543945, 0.20587778091430664, 0.20587420463562012, 0.20587825775146484, 0.20887041091918945, 0.20787644386291504, 0.20987176895141602, 0.2128734588623047, 0.20887303352355957, 0.20787668228149414, 0.21087074279785156, 0.2088758945465088, 0.20886802673339844, 0.20987153053283691, 0.2128739356994629, 0.2118687629699707, 0.2158677577972412, 0.2098703384399414, 0.21686506271362305, 0.21386933326721191, 0.21286964416503906, 0.2158660888671875, 0.2158675193786621, 0.21486592292785645, 0.21786999702453613, 0.21486234664916992, 0.21486783027648926, 0.2178661823272705, 0.2198641300201416, 0.21886563301086426, 0.21686625480651855, 0.22286200523376465, 0.2198653221130371, 0.22486138343811035, 0.2198657989501953, 0.2218642234802246, 0.22085928916931152, 0.22086381912231445, 0.22286295890808105, 0.22486257553100586, 0.22185897827148438, 0.22486233711242676, 0.2198643684387207, 0.22686004638671875, 0.22986245155334473, 0.22486186027526855, 0.22686457633972168, 0.22485709190368652, 0.22986292839050293, 0.2258610725402832, 0.22486567497253418, 0.224867582321167, 0.2268686294555664, 0.23186302185058594, 0.23085808753967285, 0.22685861587524414, 0.23285722732543945, 0.2278602123260498, 0.23185253143310547, 0.2278587818145752, 0.2338559627532959, 0.2378530502319336, 0.2318570613861084, 0.2318558692932129, 0.23085784912109375, 0.2378532886505127, 0.23285603523254395, 0.23485183715820312, 0.23485469818115234, 0.2378544807434082, 0.23685431480407715, 0.23685431480407715, 0.24085187911987305, 0.23584818840026855, 0.23885273933410645, 0.24285030364990234, 0.2408463954925537, 0.24184632301330566, 0.24085044860839844, 0.23985052108764648, 0.24884581565856934, 0.2378530502319336, 0.2418510913848877, 0.24185585975646973, 0.24584484100341797, 0.24185442924499512, 0.24384713172912598, 0.2458481788635254, 0.25084996223449707, 0.2438492774963379, 0.24884724617004395, 0.24884724617004395, 0.2488405704498291, 0.24884581565856934, 0.2458488941192627, 0.2498462200164795, 0.24984145164489746, 0.2538433074951172, 0.25084614753723145, 0.2538456916809082, 0.2548389434814453, 0.25284504890441895, 0.2518444061279297, 0.25383639335632324, 0.25684309005737305, 0.25084400177001953, 0.2508409023284912, 0.2548401355743408, 0.25684070587158203, 0.2578461170196533, 0.2578423023223877, 0.2588372230529785, 0.25583839416503906, 0.26583337783813477, 0.27083396911621094, 0.2578399181365967, 0.25684118270874023, 0.2578420639038086, 0.25884556770324707, 0.25883913040161133, 0.2558414936065674, 0.265841007232666, 0.26483774185180664, 0.2598404884338379, 0.26283884048461914, 0.2668318748474121, 0.26283860206604004, 0.265841007232666, 0.2698328495025635, 0.26883912086486816, 0.26483774185180664, 0.2658407688140869, 0.27283549308776855, 0.2678360939025879, 0.2658357620239258, 0.2638382911682129, 0.276822566986084, 0.26483631134033203, 0.26483678817749023, 0.26483654975891113, 0.27283215522766113, 0.27283191680908203, 0.3018155097961426, 0.27283477783203125, 0.2718372344970703, 0.2718334197998047, 0.2718315124511719, 0.2728297710418701, 0.27883219718933105, 0.2738347053527832, 0.2748258113861084, 0.27083897590637207, 0.27083277702331543, 0.2738308906555176, 0.2738311290740967, 0.27682948112487793, 0.27883195877075195, 0.2768268585205078, 0.27883267402648926, 0.2748274803161621, 0.27183055877685547, 0.27582883834838867, 0.2788262367248535, 0.3028125762939453, 0.2808244228363037, 0.28182291984558105, 0.28382444381713867, 0.28082776069641113, 0.2828254699707031, 0.2818264961242676, 0.2828192710876465, 0.28282594680786133, 0.28083252906799316, 0.2828211784362793, 0.281829833984375, 0.28482484817504883, 0.2858242988586426, 0.28582072257995605, 0.2828211784362793, 0.2908198833465576, 0.28782224655151367, 0.2898213863372803, 0.29082608222961426, 0.2938253879547119, 0.28781628608703613, 0.2918241024017334, 0.29581403732299805, 0.2908153533935547, 0.2898247241973877, 0.2928194999694824, 0.2998201847076416, 0.2888219356536865, 0.29181981086730957, 0.29381752014160156, 0.2938244342803955, 0.29681873321533203, 0.29381871223449707, 0.2928180694580078, 0.2948131561279297, 0.2948150634765625, 0.29781174659729004, 0.2968180179595947, 0.2988152503967285, 0.2948174476623535, 0.2948188781738281, 0.29781174659729004, 0.30181455612182617, 0.300814151763916, 0.30181455612182617, 0.2968177795410156, 0.29981493949890137, 0.2948176860809326, 0.3008153438568115, 0.3048133850097656, 0.3048131465911865, 0.3028082847595215, 0.30281853675842285, 0.3068070411682129, 0.3048124313354492, 0.3048086166381836, 0.3048079013824463, 0.3108093738555908, 0.3038167953491211, 0.3068070411682129, 0.30481696128845215, 0.3068118095397949, 0.3098142147064209, 0.30781006813049316, 0.3148059844970703, 0.30580639839172363, 0.3128030300140381, 0.3188037872314453, 0.3198049068450928, 0.31580495834350586, 0.30681467056274414, 0.31380629539489746, 0.31281161308288574, 0.31780457496643066, 0.3148074150085449, 0.3128073215484619, 0.3148069381713867, 0.3248002529144287, 0.3128066062927246, 0.3158073425292969, 0.32580065727233887, 0.3168048858642578, 0.3208034038543701, 0.3168046474456787, 0.3198070526123047, 0.3207991123199463, 0.31979846954345703, 0.3238027095794678, 0.3158080577850342, 0.32180333137512207, 0.3197972774505615, 0.31980323791503906, 0.35578322410583496, 0.3178086280822754, 0.32680368423461914, 0.3248016834259033, 0.3238039016723633, 0.3227970600128174, 0.32379889488220215, 0.32280421257019043, 0.328794002532959, 0.32680225372314453, 0.32979822158813477, 0.3287975788116455, 0.3287982940673828, 0.3287978172302246, 0.3278012275695801, 0.3307971954345703, 0.33379483222961426, 0.32679271697998047, 0.3327913284301758, 0.33479785919189453, 0.33179521560668945, 0.3447868824005127, 0.3327953815460205, 0.3307914733886719, 0.33579373359680176, 0.3317904472351074, 0.33679771423339844, 0.33579134941101074, 0.33278965950012207, 0.34178638458251953, 0.33379101753234863, 0.33579087257385254, 0.3338027000427246, 0.33979058265686035, 0.3407886028289795, 0.33879804611206055, 0.33379316329956055, 0.33779191970825195, 0.3657693862915039, 0.35178399085998535, 0.34278345108032227, 0.3407905101776123, 0.34478759765625, 0.3447878360748291, 0.34278392791748047, 0.3377537727355957, 0.3397953510284424, 0.3417937755584717, 0.3417844772338867, 0.3397955894470215, 0.3467867374420166, 0.3477811813354492, 0.3467867374420166, 0.3457825183868408, 0.3467869758605957, 0.34879040718078613, 0.3507843017578125, 0.34578752517700195, 0.35077953338623047, 0.35078907012939453, 0.34778785705566406, 0.35578131675720215, 0.3627753257751465, 0.3517775535583496, 0.35677623748779297, 0.3487820625305176, 0.3527812957763672, 0.35378241539001465, 0.35378170013427734, 0.3487851619720459, 0.363781213760376, 0.3507838249206543, 0.3567819595336914, 0.35777926445007324, 0.35978221893310547, 0.354783296585083, 0.3537776470184326, 0.3567843437194824, 0.368776798248291, 0.36177515983581543, 0.36377525329589844, 0.35977888107299805, 0.36177659034729004, 0.3627784252166748, 0.3667740821838379, 0.35777997970581055, 0.3687779903411865, 0.35977840423583984, 0.35777783393859863, 0.4417252540588379, 0.3677804470062256, 0.3647735118865967, 0.36777281761169434, 0.36777424812316895, 0.36977076530456543, 0.36676883697509766, 0.37177109718322754, 0.3977549076080322, 0.36777281761169434, 0.36777353286743164, 0.371762752532959, 0.36977219581604004, 0.37577366828918457, 0.3747689723968506, 0.37376976013183594, 0.378767728805542, 0.3727743625640869, 0.3747694492340088, 0.37376976013183594, 0.3887653350830078, 0.388763427734375, 0.3767678737640381, 0.40175676345825195, 0.3787674903869629, 0.3767683506011963, 0.38176465034484863, 0.3747692108154297, 0.37576889991760254, 0.41874194145202637, 0.37276482582092285, 0.37376976013183594, 0.38176512718200684, 0.37676262855529785, 0.3797609806060791, 0.3767678737640381, 0.37776875495910645, 0.37976598739624023, 0.3777658939361572, 0.37976670265197754, 0.3807651996612549, 0.38675665855407715, 0.3797628879547119, 0.38576698303222656, 0.38075923919677734, 0.3827645778656006, 0.38576269149780273, 0.3837590217590332, 0.3857567310333252, 0.38376736640930176, 0.3827641010284424, 0.38376355171203613, 0.3937568664550781, 0.3857612609863281, 0.3947570323944092, 0.3867621421813965, 0.3857548236846924, 0.38976049423217773, 0.3877601623535156, 0.3997504711151123, 0.3897593021392822, 0.394756555557251, 0.39175844192504883, 0.3947608470916748, 0.38976025581359863, 0.38776230812072754, 0.398754358291626, 0.3957560062408447, 0.567650556564331, 0.43573570251464844, 0.3977510929107666, 0.3967559337615967, 0.4067544937133789, 0.39576101303100586, 0.3997523784637451, 0.3997535705566406, 0.5426630973815918, 0.8105018138885498, 0.5176808834075928, 0.6645896434783936, 0.6545968055725098, 1.1632814407348633, 0.6046280860900879, 0.4057505130767822, 0.3997526168823242, 0.40375423431396484, 0.4047539234161377, 0.41574549674987793, 0.4087483882904053, 0.40774965286254883, 0.43073511123657227, 0.4207451343536377, 0.6845817565917969, 0.4067521095275879, 0.41874265670776367, 0.4367341995239258, 0.4097471237182617, 0.4107472896575928, 0.4147450923919678, 0.41175317764282227, 0.4107503890991211, 0.4017519950866699, 0.41274523735046387, 0.41175222396850586, 0.4137458801269531, 0.4137461185455322, 0.42073869705200195, 0.4097468852996826, 0.40674448013305664, 0.4107520580291748, 0.41274499893188477, 0.4167482852935791, 0.4737095832824707, 0.5016894340515137, 0.4147481918334961, 0.4197371006011963, 0.41674351692199707, 0.4177427291870117, 0.42073941230773926, 0.4177424907684326, 0.4157397747039795, 0.4127523899078369, 0.4137444496154785, 0.42374467849731445, 0.41974830627441406, 0.4217355251312256, 0.423738956451416, 0.42273426055908203, 0.4257340431213379, 0.423738956451416, 0.4247434139251709, 0.41874217987060547, 0.4247438907623291, 0.4237406253814697, 0.4197416305541992, 0.4287397861480713, 0.42473316192626953, 0.4247431755065918, 0.4277360439300537, 0.42673730850219727, 0.4297318458557129, 0.43672847747802734, 0.4317355155944824, 0.42574167251586914, 0.43073511123657227, 0.4377255439758301, 0.4317340850830078, 0.4327280521392822, 0.4297354221343994, 0.4297304153442383, 0.433729887008667, 0.42873263359069824, 0.4357259273529053, 0.4417300224304199, 0.4287400245666504, 0.43273425102233887, 0.43873047828674316, 0.43473219871520996, 0.4367344379425049, 0.43673181533813477, 0.4717085361480713, 0.4417281150817871, 0.4397263526916504, 0.4377303123474121, 0.4307386875152588, 0.4397299289703369, 0.43872499465942383, 0.439727783203125, 0.4347376823425293, 0.44272899627685547, 0.5146834850311279, 0.4387357234954834, 0.44072890281677246, 0.4437222480773926, 0.4387352466583252, 0.44373178482055664, 0.44472718238830566, 0.4457273483276367, 0.4417281150817871, 0.44472765922546387, 0.44872283935546875, 0.4447205066680908, 0.4457254409790039, 0.4477241039276123, 0.44272327423095703, 0.45072245597839355, 0.44872379302978516, 0.44272732734680176, 0.45071887969970703, 0.44872331619262695, 0.45072364807128906, 0.44672107696533203, 0.44671630859375, 0.4497220516204834, 0.4527151584625244, 0.44872403144836426, 0.45572352409362793, 0.4537215232849121, 0.4557178020477295]
    
